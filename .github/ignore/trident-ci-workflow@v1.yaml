name: auvic-trident-ci

# how this workflow is triggered
on:
  push:
    branches:
      - master
      # add branches below
    tags-ignore:
      # add tags below
  pull_request:
    branches:
      - master
      # add branches below

env:
  # Unfortuantly, noetic is not supported for 18.04 and 20.04 is not yet available, 
  # so we are stuck working with melodic
  ROS_DISTRO: melodic
  # Melodic=python | noetic=python3
  ROSDEP_PYTHON: python

defaults:
  run:
    shell: bash
    working-directory: trident

jobs:
  # job 1 - install ros and can-utils and builds trident
  # TODO: create action files and call them instead of whats happenning below.
  job1:
    # job name
    name: init_enviroment
    latest=18.04 (20.04 is not available yet)
    runs-on: ubuntu-latest

    # actions to execute in job1
    steps:
    # link actions files below
    - uses: actions/checkout@v2

    # action 1 - setup ros and can-utils
    - name: Setup ros and can-utils
      id: setup-ros-and-socketCAN
      run: |
        echo 'getting ros setup...'
        sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        sudo apt-get update
        sudo apt-get install ros-${ROS_DISTRO}-ros-base

        echo 'getting socketCAN setup...'
        sudo apt-get install can-utils
        sudo modprobe vcan
        sudo modprobe can
        sudo modprobe slcan    
        echo 'more stuff with canUSB, look at github repo for details.'
    # Action 2: install rosdep
    - name: Setup rosdep
      id: setup-rosdep
      run: |
        sudo apt-get install ${ROSDEP_PYTHON}-rosdep
        sudo rosdep init
        rosdep update
    
    # Action 3: create symbolic link to the protocol file and move it to the monitor package
    - name: create the sybolic link to protocol.h
      id: gross-stuff
      run: |
        cd ..
        cd $(pwd)/protocol/protocol/
        ln -s $(pwd)/protocol.h protocols.h
        cd ../..
        mv $(pwd)/protocol/protocol/protocols.h $(pwd)/trident/src/communication/monitor/include
        cd trident


    # Action 4: build trident
    - name: build catkin_workspace 
      run: |
        source /opt/ros/${ROS_DISTRO}/setup.bash
        rosdep install --from-paths src --ignore-src -r -y
        catkin_make
      id: build
  
  # Job 2 - Test Can_manager
  job2:
    needs: job1
    # job name
    name: test_can_manager
    # latest=18.04 (20.04 is not available yet)
    runs-on: ubuntu-latest

    # actions to execute in job1
    steps:
    # link actions files below
    - uses: actions/checkout@v2
